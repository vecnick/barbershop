CREATE TABLE Client
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    second_name varchar(100) NOT NULL,
    patronymic varchar(100),
    telephone_number varchar(100) NOT NULL
);
CREATE TABLE Barber
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    second_name varchar(100) NOT NULL,
    patronymic varchar(100),
    telephone_number varchar(100) NOT NULL
);
CREATE TABLE Type_of_supplies
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL
);
CREATE TABLE Supplies
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    type_id int REFERENCES type_of_supplies(id) ON DELETE SET NULL
);
CREATE TABLE Tool
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    network boolean
);
CREATE TABLE Service
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    price int,
    client_id int REFERENCES client(id) ON DELETE SET NULL,
    barber_id int REFERENCES barber(id) ON DELETE SET NULL,
    supplies_id int REFERENCES supplies(id) ON DELETE SET NULL
);
CREATE TABLE Tool_to_Service
(
    tool_id int REFERENCES tool(id),
    service_id int REFERENCES service(id),
    PRIMARY KEY (tool_id,service_id)
);
Create table Person(
    id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    username varchar(100) NOT NULL,
    year_of_birth int Not NULL,
    role varchar(100) Not NULL,
    password varchar NOT NULL
);
-----------------------------------------------------------------
insert into tool (name, network) values ('fan',true);
insert into tool (name, network) values ('hairbrush',false);
insert into tool (name, network) values ('trimmer',true);
insert into tool (name, network) values ('scissors',false);

insert into barber (name, second_name,patronymic,telephone_number) values ('pety','bugae','a','89169391122');
insert into barber (name, second_name,patronymic,telephone_number) values ('nick','verh','ser','89169992255');
insert into barber (name, second_name,patronymic,telephone_number) values ('max','fox','u','89174441166');

insert into client (name, second_name,patronymic,telephone_number) values ('name','surname','patronymic','89169395065');
insert into client (name, second_name,patronymic,telephone_number) values ('nick','verh','sr','89166665533');
insert into client (name, second_name,patronymic,telephone_number) values ('Petya','Bug','al','89992224411');
insert into client (name, second_name,patronymic,telephone_number) values ('imya','familia','otchestvo','87774442277');

insert into person (username, year_of_birth,patronymic,role,password) values ('user',2002,'ROLE_USER','$2a$10$9YbJpdDDf0brJyKGRbY8VegKa6KY.k.MttpYSR933aGagjKye5OkC');

insert into type_of_supplies (name) values ('shampoo');
insert into type_of_supplies (name) values ('gel');

insert into supplies (name,type_id) values ('dove',1);
insert into supplies (name,type_id) values ('nivea',1);
insert into supplies (name,type_id) values ('reuzel',2);

insert into service (name,price,client_id,barber_id,supplies_id) values ('haircut',900,1,1,1);
insert into service (name,price,client_id,barber_id,supplies_id) values ('beard_cutting',600,3,2,3);
insert into service (name,price,client_id,barber_id,supplies_id) values ('haircut',900,2,3,2);
insert into service (name,price,client_id,barber_id,supplies_id) values ('haircut',800,1,1,1);

insert into tool_to_service (tool_id,service_id) values (1,1);
insert into tool_to_service (tool_id,service_id) values (1,3);
insert into tool_to_service (tool_id,service_id) values (2,1);
insert into tool_to_service (tool_id,service_id) values (2,3);
insert into tool_to_service (tool_id,service_id) values (3,2);
insert into tool_to_service (tool_id,service_id) values (4,1);
insert into tool_to_service (tool_id,service_id) values (4,2);
insert into tool_to_service (tool_id,service_id) values (4,3);

--------------------------------------------------
CREATE function year_count(my_val integer) RETURNS integer
language plpgsql
as $$
declare new_sum integer;
BEGIN
 return (select COUNT(year_of_birth) from person
       where year_of_birth = my_val);
END;$$

CREATE PROCEDURE update_price(a varchar, b integer)
language plpgsql
as $$
BEGIN
  UPDATE service SET price = b WHERE name = a;
END;$$

create view "barber_price" AS
select service.price, barber.name from service
left join barber on service.barber_id=barber.id;

CREATE FUNCTION client_before_insert() RETURNS trigger AS $$
BEGIN
if NEW.year_of_birth > 2008 then
RAISE unique_violation USING MESSAGE = 'client must be older';
end if;
    RETURN NEW;
END
$$ LANGUAGE plpgsql;
CREATE TRIGGER tr_bef_ins
    BEFORE INSERT ON "person" FOR EACH ROW
EXECUTE PROCEDURE client_before_insert();
